"print()";"Вывод данных, команда"

"input()";"Ввод данных, команда"

"sep=, end=";"Необязательные параметры команды print()"

"sep=";"(separator, разделитель)"

"end=";"(окончание команды print())"

"variable_name";"Переменные variable_name = input()"

"PEP 8 — Python Enhanced Proposal";"Этот документ предлагает единый и общепринятый стиль написания программ на языке Python"

"num = int(input())";"Запомни: для того, чтобы считать одно целое число, мы пишем следующий код:"

"int()";"Преобразование строки к целому числу"

"**";"возведения в степень в Python"

"//";"Целочисленное деление(отбрасывает десятичную часть результата, округляет.)"

"%";"Остаток от деления (число которое остается после деления на целое число)"

"if";"(условный оператор)проверка условия осуществляется при помощи ключевого слова"

"==";"проверка условий"

"else";"(условный оператор) если условие оказалось ложным"

"True";"истина"

"False";"ложь"

"if x > 7";"если x больше 7"

"if x < 7";"если x меньше 7"

"if x >= 7";"если x больше либо равен  7"

"if x <= 7";"если x меньше либо равен  7"

"if x == 7";"если x равен  7"

"if x != 7";"если x не равен  7"

"and, or, not, ";"Логические операторы"

"and ";"логическое умножение (обоих условий одновременно)"

"or";"логическое сложение (хотя бы одного из условий)"

"not";"логическое отрицание (Оператор not позволяет инвертировать (т.е. заменить на противоположный) результат логического выражения)"

"Приоритеты логических операторов";"в первую очередь выполняется логическое отрицание not, далее выполняется логическое умножение and, далее выполняется логическое сложение or "

"elif";"Если требуется проверить несколько условий, в языке Python используется КАСКАДНЫЙ УСЛОВНЫЙ ОПЕРАТОР."

"";""

"";""

"";""

"";""

"";""

"";""

"";""

"";""

"";""

"";""

"";""

"";""

"";""

"";""





